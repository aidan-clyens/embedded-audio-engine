name: Multi-Arch CMake CI

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  packages: write   # needed for pushing to GHCR

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}-dev
  IMAGE_TAG: latest
  PROJECT_DIR: ${{ github.workspace }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch dev image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

  build-binaries-amd64:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run build in container (amd64)
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          options: --platform linux/amd64
          run: |
            cmake -B $PROJECT_DIR/build -S $PROJECT_DIR -DCMAKE_BUILD_TYPE=Release
            cmake --build $PROJECT_DIR/build --parallel
            ctest --test-dir $PROJECT_DIR/build
            tar czf build-amd64.tar.gz -C $PROJECT_DIR/build .

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries-amd64
          path: build-amd64.tar.gz

  build-binaries-arm64:
    needs: build-and-push-image
    runs-on: [self-hosted, linux, arm64]   # adjust labels to match your runner
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run build in container (arm64)
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          run: |
            cmake -B $PROJECT_DIR/build -S $PROJECT_DIR -DCMAKE_BUILD_TYPE=Release
            cmake --build $PROJECT_DIR/build --parallel
            ctest --test-dir $PROJECT_DIR/build
            tar czf build-arm64.tar.gz -C $PROJECT_DIR/build .

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries-arm64
          path: build-arm64.tar.gz

  upload-artifacts:
    needs: [build-binaries-amd64, build-binaries-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly
          files: ./artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
