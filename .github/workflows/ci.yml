name: Multi-Arch CMake CI

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}-dev
  IMAGE_TAG: latest

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch dev image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  build-binaries:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
  
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Run build in container
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/aidan-clyens/embedded-audio-engine-dev:latest
          options: --platform linux/${{ matrix.arch }}
          run: |
            cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
            cmake --build build --parallel
            ctest --test-dir build
            tar czf build-${{ matrix.arch }}.tar.gz -C build .

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.arch }}
          path: build-${{ matrix.arch }}.tar.gz

  upload-artifacts:
    needs: build-binaries
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      # Optional: attach to a GitHub Release
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly
          files: ./artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
